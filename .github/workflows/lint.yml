name: Lint and Comment

on:
  pull_request:
    branches: [main, master]
    types: [opened, reopened]

jobs:
  lint-and-comment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          npm install eslint
          wget https://gist.githubusercontent.com/hairbui76/ad58008e45a0890b34ccedbaca863573/raw/b35fc4f4e1f9db348ed25c3e5c2864452f63d910/.eslintrc.json
          pip install flake8

      - name: Get list of changed files
        id: getfile
        run: |
          echo "::set-output name=files::$(git diff --name-only HEAD^ HEAD)"

      - name: Run lint check
        shell: bash
        run: |
          IFS=' ' read -r -a files <<< "${{ steps.getfile.outputs.files }}"
          for file in "${files[@]}"; do
            if [[ "$file" == *.js ]]; then
              # Replace the following line with your JavaScript linter
              npx eslint "$file" > lint-result.txt || true
            elif [[ "$file" == *.py ]]; then
              # Replace the following line with your Python linter
              flake8 "$file" > lint-result.txt || true
            fi
          done

      - name: Add comments to PR
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const lintResult = fs.readFileSync('lint-result.txt', 'utf8');
            const errors = lintResult.split('\n');
            for (const error of errors) {
              if (error) {
                const [file, line, , message] = error.split(':');
                github.rest.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `Lint error in \`${file}\` at line ${line}: ${message}`
                });
              }
            }
