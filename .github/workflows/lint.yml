name: Lint and Comment

on:
  pull_request:
    branches: [main, master]
    types: [opened, reopened]

jobs:
  lint-and-comment:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get lines of files changed
        id: get_lines
        run: |
          git diff --unified=0 "HEAD^..HEAD" | perl -ne 'BEGIN { my %h; } if (/^diff --git a\/(.*) b\/.*/) { $f=$1; } elsif (/^\@\@ -\d+(,\d+)? \+(\d+)(,(\d+))? \@\@/) { $o=$2; $n=$4; for ($i = 0; $i < $n; $i++) { $h{$f}->{int($o)}++; $o++; } } END { use JSON; my %result; while (my ($k, $v) = each %h) { my @lines = sort {$a <=> $b} map { int($_) } keys %$v; $result{$k} = \@lines; } print encode_json \%result; }'

      - name: Run lint check
        shell: bash
        run: |
          jq -r 'keys[]' <<< echo $ALL_CHANGED_FILES
          touch lint_files.txt
          for file in "${files[@]}"; do
            if [[ "$file" == *.js ]]; then
              lint_file=$(basename -- "$file" | sed 's/\.[^.]*$//').txt
              echo "$lint_file $(wc -l $file)" >> lint_files.txt
              # Replace the following line with your JavaScript linter
              cp $VALIDATION_PATH/js/.eslintrc.json .
              npx eslint --resolve-plugins-relative-to=/usr/lib/node_modules -f $VALIDATION_PATH/js/formatter.js "$file" > $lint_file || true
            elif [[ "$file" == *.py ]]; then
              # Replace the following line with your Python linter
              flake8 "$file" > lint-result.txt || true
            fi
          done
        env:
          ALL_CHANGED_FILES: ${{ steps.get_lines.outputs }}

      - name: Add comments to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require(`${process.env.VALIDATION_PATH}/script.js`);
            script(github, context);
        env:
          ALL_CHANGED_FILES_WITH_LINES: ${{ steps.changed_lines.outputs.changed_lines }}
